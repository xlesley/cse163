import tensorflow as tf
import numpy as np
from keras.utils import np_utils

"""
Lesley Xu, (Albert) Hutiancong Wang, Sabrina Lin
CSE 163 Final Project WI 2023
This project implements AlexNet Architecture for Deep Learning
techniques to classify images from CIFAR-10 dataset that contains
60,000 32x32 color images in 10 classes with high level accuracy
and regularization processes.
"""

# -*- coding: utf-8 -*-
"""CIFAR10-classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZoIDYsiNWJVMn8_TU2qlYLKMPRyYYhDt
"""


def get_cifar10_data() -> tuple[np.ndarray, np.ndarray, np.ndarray,
                                np.ndarray, np.ndarray, np.ndarray]:
    """
    Gets the cifar10 dataset
    """
    (x_train_original, y_train_original), (x_test_original, y_test_original) = tf.keras.datasets.cifar10.load_data()
    train_num = 50000
    val_num = 5000
    test_num = 5000
    x_val = x_test_original[:val_num]
    y_val = y_test_original[:val_num]
    x_test = x_test_original[val_num:val_num+test_num]
    y_test = y_test_original[val_num:val_num+test_num]
    x_train = x_train_original[:train_num]
    y_train = y_train_original[:train_num]

    x_train = x_train.astype('float32')
    x_val = x_val.astype('float32')
    x_test = x_test.astype('float32')

    x_train = x_train / 255
    x_val = x_val / 255
    x_test = x_test / 255

    y_train = np_utils.to_categorical(y_train, num_classes=10)
    y_val = np_utils.to_categorical(y_val, num_classes=10)
    y_test = np_utils.to_categorical(y_test, num_classes=10)

    return x_train, y_train, x_val, y_val, x_test, y_test
